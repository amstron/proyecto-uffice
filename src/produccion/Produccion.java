/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package produccion;

import java.awt.Toolkit;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import javax.swing.JOptionPane;
import java.util.Date;
import java.awt.event.KeyEvent;
import java.text.SimpleDateFormat;
/**
 *
 * @author headbanger
 */
public class Produccion extends javax.swing.JFrame {

    lib.Conexion obj = new lib.Conexion();  
    int udm = 0;
    int resol = 72;
    Float mi = 0.000f;
    Float md = 0.000f;
    Float ms = 0.000f;
    Float min = 0.000f;
    Float tam = 5.000f;
    int rot = 0;

    /**
     * Creates new form Produccion
     *
     */
    public Produccion() {

        initComponents();
        this.setResizable(false);
        this.setDefaultCloseOperation(DISPOSE_ON_CLOSE);
        inhabilitar();
        //para que se centre en la pantalla
        setLocationRelativeTo(null);
        //lo que hice hay de la propiedad resizable es para que no deje que el formulario lo estiren hacia arriba y hacia los lados
    }
//metodo que inhabilita los campos para que solo queden activos despues de ingresar la cedula y validar el usuario

    void inhabilitar() {
        txtPedido.setEnabled(false);
        txtPeso.setEnabled(false);
        btnGuardar.setEnabled(false);
        btnCancelar.setEnabled(false);
        txtPedido.setText("");
        txtPeso.setText("");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     *
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        lblProducido = new javax.swing.JLabel();
        txtPeso = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        btnGuardar = new javax.swing.JButton();
        lblRegistro = new javax.swing.JLabel();
        lblFaltante = new javax.swing.JLabel();
        btnCancelar = new javax.swing.JButton();
        lblRuedFalt = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        txtCedula = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        lblOperario = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        txtPedido = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        lblFormula = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        lblProducto = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        lblRef = new javax.swing.JLabel();
        lblReferencia = new javax.swing.JLabel();
        lblProyeccion = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        lblRuedas = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        lblConsec = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Producci√≥n");
        setResizable(false);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Informacion", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 0, 14))); // NOI18N

        jLabel8.setText("Peso");

        lblProducido.setText("En registro");

        txtPeso.setText(" ");
        txtPeso.setBorder(null);
        txtPeso.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPesoActionPerformed(evt);
            }
        });

        jLabel15.setText("kg Faltante");

        btnGuardar.setText("Ingresar");
        btnGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardarActionPerformed(evt);
            }
        });
        btnGuardar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                btnGuardarKeyPressed(evt);
            }
        });

        lblRegistro.setText(" ");
        lblRegistro.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(102, 102, 102), 1, true));

        lblFaltante.setText(" ");
        lblFaltante.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(102, 102, 102), 1, true));

        btnCancelar.setText("Cancelar");
        btnCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarActionPerformed(evt);
            }
        });

        lblRuedFalt.setText(" ");
        lblRuedFalt.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(102, 102, 102), 1, true));

        jLabel10.setText("Ruedas Faltantes");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(133, 133, 133)
                .addComponent(btnGuardar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnCancelar)
                .addGap(154, 154, 154))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(txtPeso, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 105, Short.MAX_VALUE)
                        .addComponent(lblRegistro, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel8)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(lblProducido)))
                .addGap(113, 113, 113)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblFaltante, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel15))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblRuedFalt, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(66, 66, 66))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txtPeso, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblRegistro, javax.swing.GroupLayout.DEFAULT_SIZE, 22, Short.MAX_VALUE)
                    .addComponent(lblFaltante, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lblRuedFalt, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(lblProducido)
                    .addComponent(jLabel15)
                    .addComponent(jLabel10))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 24, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnGuardar)
                    .addComponent(btnCancelar))
                .addGap(23, 23, 23))
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Elabora", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 0, 14))); // NOI18N

        txtCedula.setBorder(null);
        txtCedula.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        txtCedula.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCedulaActionPerformed(evt);
            }
        });

        jLabel1.setText("Cedula");

        lblOperario.setBackground(new java.awt.Color(153, 153, 255));
        lblOperario.setText(" ");
        lblOperario.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(102, 102, 102), 1, true));
        lblOperario.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
                lblOperarioAncestorAdded(evt);
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
            }
        });

        jLabel2.setText("Operario");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtCedula, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 176, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(59, 59, 59))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addComponent(lblOperario, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txtCedula)
                    .addComponent(lblOperario, javax.swing.GroupLayout.DEFAULT_SIZE, 27, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(jLabel1))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Parametros", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 0, 14))); // NOI18N

        txtPedido.setBorder(null);
        txtPedido.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPedidoActionPerformed(evt);
            }
        });

        jLabel3.setText("N¬∞ Pedido");

        lblFormula.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(102, 102, 102), 1, true));

        jLabel6.setText("Formula");

        lblProducto.setText(" ");
        lblProducto.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(102, 102, 102), 1, true));

        jLabel4.setText("Producto");

        lblRef.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(102, 102, 102), 1, true));

        lblReferencia.setText("Referencia");

        lblProyeccion.setText(" ");
        lblProyeccion.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(102, 102, 102), 1, true));

        jLabel7.setText("kg Proyeccion");

        lblRuedas.setText(" ");
        lblRuedas.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(102, 102, 102), 1, true));
        lblRuedas.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);

        jLabel5.setText("Ruedas Proyectadas");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(txtPedido, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(90, 90, 90)
                        .addComponent(lblProducto, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addGap(116, 116, 116)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel7)
                                    .addComponent(lblProyeccion, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(0, 1, Short.MAX_VALUE)))))
                .addGap(90, 90, 90)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblRef, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lblReferencia, javax.swing.GroupLayout.DEFAULT_SIZE, 165, Short.MAX_VALUE))
                        .addGap(43, 43, 43)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblFormula, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(30, 30, 30))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5)
                            .addComponent(lblRuedas, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtPedido, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(lblProducto, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(lblRef, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lblFormula, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4)
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(lblReferencia)
                        .addComponent(jLabel6)))
                .addGap(26, 26, 26)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblProyeccion, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblRuedas, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(jLabel5))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Consecutivo", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 0, 14))); // NOI18N

        lblConsec.setText(" ");
        lblConsec.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblConsec, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(lblConsec, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 87, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(8, 8, 8))
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents


    private void txtCedulaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCedulaActionPerformed
        //DECLARAMOS LA VARIABLE  CEDULA
        String cedula = txtCedula.getText();
        //SI EL CAMPO CEDULA ESTA VACIO MUESTRA MENSAJE INGRESE CEDULA
        if ((cedula.isEmpty())) {
            JOptionPane.showMessageDialog(null, "Ingrese numero de cedula");
        } else {    
            Connection cn = obj.conexion();
            try {
                try (
                        //SE CREA EL STATEMENT QUE REALIZA LA CONSULTA A LA BASE DE DATOS
                        Statement st = cn.createStatement();
                        ResultSet rs = st.executeQuery("SELECT apellido+' '+nombre  FROM EmpleadoProd WHERE cedula =" + cedula)) {
                    //si se encuentra el empleado se habilita el campo para digitar el  de pedido
                    txtPedido.setEnabled(true);
                    // muestra en un label  el empleado q se digit√≥ anteriormente  y se llamo de la base de datos
                    while (rs.next()) {
                        lblOperario.setText(rs.getString(1));
                        txtCedula.transferFocus();
                        rs.last();
                    }
                    //declara la variable en q se almacena el usuario encontrado
                    int encontrado = rs.getRow();
                    System.out.println(String.valueOf(encontrado));
                    if (encontrado == 1) {
                        this.setVisible(true);

                    } //si no se encuentra el operario inhabilita nuevamente  los campos
                    else {
                        txtPedido.setEnabled(false);
                        JOptionPane.showMessageDialog(null, "No se encuentra usuario");
                        txtPedido.setText("");
                        txtPeso.setText("");
                        txtCedula.setText("");
                        lblOperario.setText("");
                        lblProducto.setText("");
                        lblRef.setText("");
                        lblFormula.setText("");
                        lblProyeccion.setText("");
                        lblRuedas.setText("");
                        lblRegistro.setText("");
                        lblFaltante.setText("");
                        lblRuedFalt.setText("");
                    }
                }
            } catch (SQLException e) {
            }
    }//GEN-LAST:event_txtCedulaActionPerformed

    }

    private void txtPedidoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPedidoActionPerformed

        //declara la variable pedido del txtpedido de fjorm
        String pedido = txtPedido.getText();

        //si el campo se encuentra vacio no deja avanzar y solicita ingresar  el dato requerido
        if ((pedido.isEmpty())) {
            JOptionPane.showMessageDialog(null, "Ingrese numero de pedido");
        } else {
            Connection con = obj.conexion();

            try {
                try (Statement st = con.createStatement();
                        //realiza la consulta  de acuerdo al numero de pedido que se haya ingressado
                        ResultSet rs = st.executeQuery("SELECT nombre,ref,formula,cantidad,peso_proyectado, T1.idPEDIDO\n"
                                + "FROM PedidoProd T1\n"
                                + "INNER JOIN ProductoProd  T2 ON T1.idPEDIDO = T2.idproducto\n"
                                + "where idPEDIDO = " + pedido)) {
                    txtPeso.setEnabled(true);
                    txtPedido.transferFocus();

                    //muestra los datos tomados de la tabla pedido en labels como informacion al operario de lo q esta produciendo
                    while (rs.next()) {
                        lblProducto.setText(rs.getString(1));
                        lblRef.setText(rs.getString(2));
                        lblFormula.setText(rs.getString(3));
                        lblProyeccion.setText(rs.getString(5));
                        lblRuedas.setText(rs.getString(4));
                        rs.last();
                    }
                    int encontrado = rs.getRow();
                    System.out.println(String.valueOf(encontrado));
                    if (encontrado == 1) {
                        this.setVisible(true);

                    } //si el, pedido no se encuentra mantiene en blanco los demas campos
                    else {
                        txtPedido.setEnabled(false);
                        JOptionPane.showMessageDialog(null, "no existe pedido");
                        txtPedido.setText("");
                        txtPeso.setText("");
                        lblProducto.setText("");
                        lblRef.setText("");
                        lblFormula.setText("");
                        lblProyeccion.setText("");
                        lblRuedas.setText("");
                        lblRegistro.setText("");
                        lblFaltante.setText("");
                        lblRuedFalt.setText("");
                        txtPeso.setEnabled(false);
                    }
                }
            } catch (SQLException e) {
            }
    }//GEN-LAST:event_txtPedidoActionPerformed
    }


    private void txtPesoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPesoActionPerformed
        //por no ser una variable  glbal se vuelve a declarar dentro de esta funcion
        String pedido = txtPedido.getText();

        //declaramos la variable peso
        Double peso = Double.parseDouble(txtPeso.getText());

        //si el campo peso se encuentra vacio solicita ingresar peso 
        if (peso.equals("")) {
            JOptionPane.showMessageDialog(null, "Ingrese peso");
        }
        //si el peso es cero , solicita ingresar peso valido
        if (peso == 0) {
            JOptionPane.showMessageDialog(null, "Ingrese peso valido");
        }

        //si el peso excede el peso predefinido, muestra mensaje y no permite avanzar
        if (peso > 2.5) {
            JOptionPane.showMessageDialog(null, "excede el peso permitido");
        } else {
            //si el peso esta dentro del rango avanza y permite guardar
            txtPeso.transferFocus();
            btnGuardar.setEnabled(true);
            btnCancelar.setEnabled(true);
            Connection cn = obj.conexion();
            try {
                //suma el peso de los productos elaborados hasta el momento de acuerdo al nmero de pedido q se esa diligenciando
                Statement st = cn.createStatement();
                ResultSet rs = st.executeQuery("SELECT sum(pesa) FROM ProductoTerminado where idPedido= " + pedido);

                while (rs.next()) {
                    //muestra el peso sumado anteriormente
                    lblRegistro.setText(rs.getString(1) + " kg");
                    lblRegistro.transferFocus();

                }
            } catch (SQLException e) {
            }
            //salida
            /*Tio que no entiende jejeje*/

            //se instancia la clase y se crea el metodo
            MetodoRegistroProduccion metodo = new MetodoRegistroProduccion();

            //se crea la variable, se instancia con el metodo de la clase q realiza la operacion 
            /*1. se instancia la variable String ResultadoPesoPedido 
             Explicacion d¬øl por que : se debe instanciar String debido a que el metodo retorna un String del resultado de la consulta*/
            String ResultadoPesoPedido = metodo.PesoPedido(pedido);
            /*2. se instancia la variable String ResultadoPesoPedido 
             Explicacion d¬øl por que : se debe instanciar String debido a que el metodo retorna un String del resultado de la consulta*/
            String ResultadoPesoProducto = metodo.PesoProducto(pedido);
            /*3. se instancia la variable String ResultadoPesoPedido 
             Explicacion d¬øl por que : se debe instanciar String debido a que el metodo retorna un String del resultado de la consulta*/
            Double CantidadPeso = Double.parseDouble(ResultadoPesoPedido);
            /*4. se instancia la variable String ResultadoPesoPedido 
             Explicacion d¬øl por que : se debe instanciar String debido a que el metodo retorna un String del resultado de la consulta*/
            Double CantidadPesoProducto = Double.parseDouble(ResultadoPesoProducto);

            //da salida a los kilos faltantes-llamando el resultado al metodo creado en la otra clase
            Double ResultadoPesoTotal = CantidadPeso - CantidadPesoProducto;
            lblFaltante.setText(String.valueOf(ResultadoPesoTotal));

            String ResultadoCantida = metodo.ConsultarCantidadPedido(pedido);

            String ResultadoCount = metodo.ConsultarCountProducto(pedido);

            Double Cantidad = Double.parseDouble(ResultadoCantida);

            Double CantidadID = Double.parseDouble(ResultadoCount);

            //da salida a los kilos faltantes-llamando el resultado al metodo creado en la otra clase
            Double Resultado = Cantidad - CantidadID;
            lblRuedFalt.setText(String.valueOf(Resultado));

        }


    }//GEN-LAST:event_txtPesoActionPerformed
    /*
     private void lblConsecActionPerformed(java.awt.event.ActionEvent evt) {

     try {
     QRCode cod = new QRCode();

     String texto = lblConsec.getText();
     cod.setData(texto);
     cod.setDataMode(QRCode.MODE_BYTE);

     cod.setUOM(udm);
     cod.setLeftMargin(mi);
     cod.setResolution(resol);
     cod.setRightMargin(ms);
     cod.setBottomMargin(mi);
     cod.setRotate(rot);
     cod.setModuleSize(tam);

     String archiv = System.getProperty("user.home") + "/codigodemo.gif";
     cod.renderBarcode(archiv);

     Desktop d = Desktop.getDesktop();
     d.open(new File(archiv));
     } catch (Exception e) {

     }
     }
     */

    public static String getFechaActual() {
        Date ahora = new Date();
        SimpleDateFormat formateador = new SimpleDateFormat("dd-MM-yyyy");
        return formateador.format(ahora);
    }

    String accion = "insertar";

    private void btnGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardarActionPerformed
        int idEmpl = 0;
        String idpod = null;
        obj.conexion();

        java.util.Date fecha = new Date();

        String sSQL = " ";
        String mensaje = " ";
        String sSQL1 = " ";

        String cedula = txtCedula.getText();

        String pedido = txtPedido.getText();

        String pesa = txtPeso.getText();

        ////independientemente del operario o del pedido q se digite asi no se alos
        // parametros q muestre en los labels igual guarda normalmente lo q se digit√≥ en la base de datos los labels muestra informacion mas no guarda
        //para consulta va a mostrar lo  q realmente es
        if (pedido.isEmpty() || cedula.isEmpty() || pesa.isEmpty()) {
            /*sTio si lo deja asi dejelo mejor en un constante*/
            mensaje = "No puede haber campos vacios revise por favor";
            JOptionPane.showMessageDialog(null, mensaje);
        } else {
            int seleccion = JOptionPane.showOptionDialog(
                    this,
                    "¬øDesea guardar?", //Mensaje
                    "Seleccione una opci√≥n", // T√≠tulo
                    JOptionPane.YES_NO_CANCEL_OPTION,
                    JOptionPane.QUESTION_MESSAGE,
                    null, // null para icono por defecto.
                    new Object[]{"Si", "No"}, // null para YES, NO y CANCEL
                    "Si");

            //cindicion si uno de los campos esta vacio no guardar
            //si se cumplen los kilos de la orden no dejar guardar, mostrar mensaje
            if (seleccion != -1) {
                if ((seleccion + 1) == 1) {

                    String ced = txtCedula.getText();

                    // PRESIONO SI
                    sSQL = "INSERT INTO ProductoTerminado (fecha, pesa, idPEDIDO) VALUES (?, ?,  ?)";

                    //selecciono lel id del ultimo empleado y producto terminado de la s respectivas tablas luego loe envio a su
                    //respectivo metodo de insercion en la otra clase
                    String ConsultarIdEmpleado = "select  idempleado from EmpleadoProd where cedula  = " + ced + "";
                    String ConsultarIDPorductoTerminado = "select MAX(idprodTerminado) from ProductoTerminado";
                    /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

                    MetodoRegistroProduccion objMetodos = new MetodoRegistroProduccion();
                    String ResultadoIdEmpleado = objMetodos.ConsultarIDEmpleado(ConsultarIdEmpleado);
                    String ResultadoIdProdyctoTerminado = objMetodos.ConsultarIdPrtoductoTerminado(ConsultarIDPorductoTerminado);
                    String[] datos = new String[2];
                    datos[0] = ResultadoIdEmpleado;
                    datos[1] = ResultadoIdProdyctoTerminado;
                    int ResultadoInsertTablaPuente = objMetodos.RegistroTablaPuente(datos);

                    if (ResultadoInsertTablaPuente == 1) {
                        JOptionPane.showMessageDialog(this, RegistroProduccionUtil.RegistroExitoso, RegistroProduccionUtil.RegistroExitoso, JOptionPane.INFORMATION_MESSAGE);
                    }

                    //aqui vamos
                } else {
                    txtCedula.setText("");
                    lblOperario.setText("");
                    txtPeso.setText("");
                    txtPedido.setText("");
                    lblProducto.setText("");
                    lblRef.setText("");
                    lblFormula.setText("");
                    lblProyeccion.setText("");
                    lblRuedas.setText("");
                    lblRegistro.setText("");
                    lblFaltante.setText("");
                    lblRuedFalt.setText("");

                    txtPedido.setEnabled(false);
                    txtPeso.setEnabled(false);

                    btnGuardar.setEnabled(false);
                    btnCancelar.setEnabled(false);

                }

                // mensaje = "Los datos se han insertado de manera satisfactoria";
            }

            Connection cn = obj.conexion();
            int ped = Integer.parseInt(txtPedido.getText());
            double peso = Double.parseDouble(txtPeso.getText());
            try {
                PreparedStatement pst = cn.prepareStatement(sSQL);
                //pst.setDate(1, (java.sql.Date) fecha);
                pst.setString(1, "");
                pst.setDouble(2, peso);

                pst.setInt(3, ped);

                int n = pst.executeUpdate();
                if (n > 0) {

                    txtCedula.setText("");
                    lblOperario.setText("");
                    txtPeso.setText("");
                    txtPedido.setText("");
                    lblProducto.setText("");
                    lblRef.setText("");
                    lblFormula.setText("");
                    lblProyeccion.setText("");
                    lblRuedas.setText("");
                    lblRegistro.setText("");
                    lblFaltante.setText("");
                    lblRuedFalt.setText("");

                    txtPedido.setEnabled(false);
                    txtPeso.setEnabled(false);

                    btnGuardar.setEnabled(false);
                    btnCancelar.setEnabled(false);
                }

            } catch (SQLException ex) {
                String mensaje2;
                mensaje2 = "inicie nuevamente";
                JOptionPane.showMessageDialog(null, mensaje2);
            }

        }


    }//GEN-LAST:event_btnGuardarActionPerformed


    private void lblOperarioAncestorAdded(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_lblOperarioAncestorAdded

    }//GEN-LAST:event_lblOperarioAncestorAdded

    private void btnCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarActionPerformed

        txtPedido.setText("");
        txtPeso.setText("");
        txtCedula.setText("");
        lblOperario.setText("");
        lblProducto.setText("");
        lblRef.setText("");
        lblFormula.setText("");
        lblProyeccion.setText("");
        lblRuedas.setText("");
        lblRegistro.setText("");
        lblFaltante.setText("");
        lblRuedFalt.setText("");

        txtPedido.setEnabled(false);
        txtPeso.setEnabled(false);

        btnGuardar.setEnabled(false);
        btnCancelar.setEnabled(false);
    }//GEN-LAST:event_btnCancelarActionPerformed
//se debe configurar con clic derecho en la interfaz con el boton evento action key key pressed
    private void btnGuardarKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_btnGuardarKeyPressed
        int key = evt.getKeyCode();
        if (key == KeyEvent.VK_ENTER) {
            Toolkit.getDefaultToolkit().beep();
            this.btnGuardarActionPerformed(null);
        }
    }//GEN-LAST:event_btnGuardarKeyPressed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        
        /* Set the Nimbus look and feel */

        try {
            javax.swing.UIManager.setLookAndFeel("com.sun.java.swing.plaf.windows.WindowsLookAndFeel");
            /*for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }*/
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Produccion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new Produccion().setVisible(true);
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCancelar;
    private javax.swing.JButton btnGuardar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JLabel lblConsec;
    private javax.swing.JLabel lblFaltante;
    private javax.swing.JLabel lblFormula;
    private javax.swing.JLabel lblOperario;
    private javax.swing.JLabel lblProducido;
    private javax.swing.JLabel lblProducto;
    private javax.swing.JLabel lblProyeccion;
    private javax.swing.JLabel lblRef;
    private javax.swing.JLabel lblReferencia;
    private javax.swing.JLabel lblRegistro;
    private javax.swing.JLabel lblRuedFalt;
    private javax.swing.JLabel lblRuedas;
    private javax.swing.JTextField txtCedula;
    private javax.swing.JTextField txtPedido;
    private javax.swing.JTextField txtPeso;
    // End of variables declaration//GEN-END:variables
}
